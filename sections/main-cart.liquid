<div class="wrapper">
  <div
    class="mt-8 mb-8 lg:mt-12 flex lg:items-center {% if cart == empty %}justify-center{% else  %}justify-between{% endif %}"
  >
    <h1 class="font-bold uppercase text-[22px] lg:text-[35px] {% if cart == empty %}text-center{% endif %}">
      Carrito de Compras
    </h1>
    {% if cart != empty %}
      <a href="{{ routes.all_products_collection_url }}" class="underline underline-offset-2">
        {{- 'general.continue_shopping' | t -}}
      </a>
    {% endif %}
  </div>
  {% if cart == empty %}
    <div class="w-full h-[50vh] flex flex-col justify-center items-center">
      {% render 'icon-cart-drawer' %}
      <h1 class="text-center mt-4">{{ 'sections.cart.empty' | t }}</h1>
      <a href="{{ routes.all_products_collection_url }}" class="text-center underline text-[#a00]">
        {{ 'general.continue_shopping' | t }}
      </a>

      {% comment %}
        {%- if shop.customer_accounts_enabled and customer == null -%}
        <h2 class="cart__login-title">{{ 'sections.cart.login.title' | t }}</h2>
        <p class="cart__login-paragraph">
          {{ 'sections.cart.login.paragraph_html' | t: link: routes.account_login_url }}
        </p>
        {%- endif -%}
      {% endcomment %}
    </div>
  {% endif %}

  {% if cart != empty %}
    <p class="text-sm mb-8">
      Solo se permite la compra de un máximo de 3 productos por pedido. Si deseas añadir más productos, te recomendamos
      realizar un nuevo pedido.
    </p>
    <form
      action="{{ routes.cart_url }}?checkout[shipping_address][country]=CL"
      class="cart__contents critical-hidden"
      method="post"
      id="cart"
    >
      <div class="cart__items" id="main-cart-items" data-id="{{ section.id }}">
        <div class="js-contents">
          {%- if cart != empty -%}
            <table class="cart-items w-full">
              <caption class="sr-only">
                {{ 'sections.cart.title' | t }}
              </caption>
              <thead class="block sm:table-header-group w-full">
                <tr class="flex sm:table-row justify-between border-b border-[#ccc] pb-2">
                  <th class="uppercase text-sm font-semibold text-left sm:pb-4" colspan="2" scope="col">
                    {{ 'sections.cart.headings.product' | t }}
                  </th>
                  <th class="uppercase sm:hidden text-sm font-semibold text-right sm:pb-4" colspan="1" scope="col">
                    {{ 'sections.cart.headings.total' | t }}
                  </th>
                  <th
                    class="uppercase hidden sm:table-cell text-sm font-semibold text-left sm:pb-4"
                    colspan="1"
                    scope="col"
                  >
                    {{ 'sections.cart.headings.quantity' | t }}
                  </th>
                  <th
                    class="uppercase hidden sm:table-cell text-sm font-semibold text-right sm:pb-4"
                    colspan="1"
                    scope="col"
                  >
                    {{ 'sections.cart.headings.total' | t }}
                  </th>
                </tr>
              </thead>

              <tbody class="block w-full sm:table-row-group">
                {%- for item in cart.items -%}
                  <tr class="grid grid-cols-4 grid-rows-2 sm:table-row" id="CartItem-{{ item.index | plus: 1 }}">
                    <td class="cart-item__media py-4 col-start row-start-1 row-end-3 sm:w-[150px]">
                      {% if item.image %}
                        {% comment %} Leave empty space due to a:empty CSS display: none rule {% endcomment %}
                        <a href="{{ item.url }}" class="cart-item__link" aria-hidden="true" tabindex="-1"> </a>
                        <div class="cart-item__image-container gradient global-media-settings">
                          <img
                            src="{{ item.image | image_url: width: 300 }}"
                            class="cart-item__image"
                            alt="{{ item.image.alt | escape }}"
                            loading="lazy"
                            width="150"
                            height="{{ 150 | divided_by: item.image.aspect_ratio | ceil }}"
                          >
                        </div>
                      {% endif %}
                    </td>

                    <td class="cart-item__details py-4 col-start-2 col-end-4 pl-4 lg:pl-8">
                      {%- if settings.show_vendor -%}
                        <p class="">{{ item.product.vendor }}</p>
                      {%- endif -%}

                      <a href="{{ item.url }}" class="uppercase font-semibold tracking-[1ṕx]">
                        {{- item.product.title | escape -}}
                      </a>

                      {%- if item.original_price != item.final_price -%}
                        <div class="cart-item__discounted-prices">
                          <span class="sr-only">
                            {{ 'products.product.price.regular_price' | t }}
                          </span>
                          <s class="cart-item__old-price product-option">
                            {{- item.original_price | money -}}
                          </s>
                          <span class="sr-only">
                            {{ 'products.product.price.sale_price' | t }}
                          </span>
                          <strong class="cart-item__final-price product-option">
                            {{ item.final_price | money }}
                          </strong>
                        </div>
                      {%- else -%}
                        <div class="product-option">
                          {{ item.original_price | money }}
                        </div>
                      {%- endif -%}

                      {%- if item.product.has_only_default_variant == false
                        or item.properties.size != 0
                        or item.selling_plan_allocation != null
                      -%}
                        <dl>
                          {%- if item.product.has_only_default_variant == false -%}
                            {%- for option in item.options_with_values -%}
                              <div class="product-option">
                                <dt>{{ option.name }}:</dt>
                                <dd>{{ option.value }}</dd>
                              </div>
                            {%- endfor -%}
                          {%- endif -%}

                          {%- for property in item.properties -%}
                            {%- assign property_first_char = property.first | slice: 0 -%}
                            {%- if property.last != blank and property_first_char != '_' -%}
                              <div class="product-option">
                                <dt>{{ property.first }}:</dt>
                                <dd>
                                  {%- if property.last contains '/uploads/' -%}
                                    <a href="{{ property.last }}" class="link" target="_blank">
                                      {{ property.last | split: '/' | last }}
                                    </a>
                                  {%- else -%}
                                    {{ property.last }}
                                  {%- endif -%}
                                </dd>
                              </div>
                            {%- endif -%}
                          {%- endfor -%}
                        </dl>

                        <p class="product-option">{{ item.selling_plan_allocation.selling_plan.name }}</p>
                      {%- endif -%}

                      <ul class="discounts list-unstyled" role="list" aria-label="{{ 'customer.order.discount' | t }}">
                        {%- for discount in item.discounts -%}
                          <li class="discounts__discount">
                            {%- render 'icon-discount' -%}
                            {{ discount.title }}
                          </li>
                        {%- endfor -%}
                      </ul>
                    </td>

                    <td class="cart-item__totals sm:hidden py-4 text-right">
                      <div class="loading-overlay hidden">
                        <div class="loading-overlay__spinner">
                          <svg
                            aria-hidden="true"
                            focusable="false"
                            class="spinner"
                            viewBox="0 0 66 66"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
                          </svg>
                        </div>
                      </div>
                      <div class="cart-item__price-wrapper">
                        {%- if item.original_line_price != item.final_line_price -%}
                          <dl class="cart-item__discounted-prices">
                            <dt class="sr-only">
                              {{ 'products.product.price.regular_price' | t }}
                            </dt>
                            <dd>
                              <s class="cart-item__old-price price price--end">
                                {{ item.original_line_price | money }}
                              </s>
                            </dd>
                            <dt class="sr-only">
                              {{ 'products.product.price.sale_price' | t }}
                            </dt>
                            <dd class="price price--end">
                              {{ item.final_line_price | money }}
                            </dd>
                          </dl>
                        {%- else -%}
                          <span class="price price--end">
                            {{ item.original_line_price | money }}
                          </span>
                        {%- endif -%}

                        {%- if item.variant.available and item.unit_price_measurement -%}
                          <div class="unit-price caption">
                            <span class="sr-only">{{ 'products.product.price.unit_price' | t }}</span>
                            {{ item.variant.unit_price | money }}
                            <span aria-hidden="true">/</span>
                            <span class="sr-only">&nbsp;{{ 'accessibility.unit_price_separator' | t }}&nbsp;</span>
                            {%- if item.variant.unit_price_measurement.reference_value != 1 -%}
                              {{- item.variant.unit_price_measurement.reference_value -}}
                            {%- endif -%}
                            {{ item.variant.unit_price_measurement.reference_unit }}
                          </div>
                        {%- endif -%}
                      </div>
                    </td>

                    <td class="cart-item__quantity py-4 pl-4 sm:pl-0 col-start-2 col-end-5 sm:table-cell">
                      <div class="flex gap-x-4">
                        <label class="sr-only" for="Quantity-{{ item.index | plus: 1 }}">
                          {{ 'products.product.quantity.label' | t }}
                        </label>
                        <div
                          class="flex justify-between items-center border border-[#4a4a49]"
                          x-data="
                            {
                              quantity: {{ item.quantity }},
                              maxQuantity: 3, // Máximo permitido
                              showAlert: false, // Estado de alerta
                              changeQuantity(name) {
                                if (name === 'plus') {
                                  if (this.quantity < this.maxQuantity) {
                                    this.quantity++;
                                    $refs.quantity_input.stepUp();
                                    this.showAlert = false; // Ocultar alerta si está dentro del límite
                                  } else {
                                    this.showAlert = true; // Mostrar alerta si intenta sobrepasar el límite
                                  }
                                } else if (name === 'minus') {
                                  if (this.quantity > 1) {
                                    this.quantity--;
                                    $refs.quantity_input.stepDown();
                                    this.showAlert = false; // Ocultar alerta si reduce la cantidad
                                  }
                                }
                                $dispatch('update-cart', {
                                  id: $refs.quantity_input.dataset.quantityVariantId,
                                  quantity: this.quantity
                                });
                              }
                            }
                          "
                        >
                          <button
                            class="border-none bg-transparent flex justify-center items-center p-2"
                            name="minus"
                            type="button"
                            @click="changeQuantity('minus')"
                          >
                            <span class="sr-only">
                              {{- 'products.product.quantity.decrease' | t: product: item.product.title | escape -}}
                            </span>
                            {% render 'icon-minus', class: 'w-3' %}
                          </button>

                          <input
                            class="outline-none text-center w-[80px] h-full border-l border-r border-[#4a4a49] relative"
                            data-quantity-variant-id="{{ item.variant.id }}"
                            type="number"
                            name="updates[]"
                            value="{{ item.quantity }}"
                            x-ref="quantity_input"
                            x-model="quantity"
                            data-cart-quantity="{{ cart | item_count_for_variant: item.variant.id }}"
                            min="1"
                            max="3"
                            step="{{ item.variant.quantity_rule.increment }}"
                            aria-label="{{ 'products.product.quantity.input_label' | t: product: item.product.title | escape }}"
                            id="Quantity-{{ item.index | plus: 1 }}"
                            data-index="{{ item.index | plus: 1 }}"
                            @input="
                              if ($event.target.value > maxQuantity) {
                                quantity = maxQuantity;
                                $event.target.value = maxQuantity;
                                showAlert = true;
                              } else {
                                showAlert = false;
                              }
                            "
                          >
                          <button
                            class="border-none bg-transparent flex justify-center items-center p-2"
                            name="plus"
                            type="button"
                            @click="changeQuantity('plus')"
                          >
                            <span class="sr-only">
                              {{- 'products.product.quantity.increase' | t: product: item.product.title | escape -}}
                            </span>
                            {% render 'icon-plus', class: 'w-3' %}
                          </button>
                          <span class="absolute mt-[80px] xl:mt-[70px] text-red-500 text-sm" x-show="showAlert"
                            >Sólo se permite un máximo de 3 unidades por pedido</span
                          >
                        </div>

                        <div id="Remove-{{ item.index | plus: 1 }}" data-index="{{ item.index | plus: 1 }}">
                          <a
                            href="{{ item.url_to_remove }}"
                            class="button button--tertiary"
                            aria-label="{{ 'sections.cart.remove_title' | t: title: item.title }}"
                          >
                            {% render 'icon-remove' %}
                          </a>
                        </div>

                        <!-- Alerta solo cuando se intenta agregar más de 3 -->
                        {% comment %}
                          <span
                            x-show="showAlert"
                            class="text-red-600 text-sm font-semibold"
                            x-transition
                          >
                            Solo se permite la compra de un máximo de 3 productos por pedido
                          </span>
                        {% endcomment %}

                        <div class="cart-item__error" id="Line-item-error-{{ item.index | plus: 1 }}" role="alert">
                          <small class="cart-item__error-text"></small>
                        </div>
                      </div>
                    </td>

                    <td class="py-4 hidden sm:table-cell sm:text-right">
                      <div class="loading-overlay hidden">
                        <div class="loading-overlay__spinner">
                          <svg
                            aria-hidden="true"
                            focusable="false"
                            class="spinner"
                            viewBox="0 0 66 66"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
                          </svg>
                        </div>
                      </div>

                      <div class="cart-item__price-wrapper">
                        {%- if item.original_line_price != item.final_line_price -%}
                          <dl class="cart-item__discounted-prices">
                            <dt class="sr-only">
                              {{ 'products.product.price.regular_price' | t }}
                            </dt>
                            <dd>
                              <s class="cart-item__old-price price price--end">
                                {{ item.original_line_price | money }}
                              </s>
                            </dd>
                            <dt class="sr-only">
                              {{ 'products.product.price.sale_price' | t }}
                            </dt>
                            <dd class="price price--end">
                              {{ item.final_line_price | money }}
                            </dd>
                          </dl>
                        {%- else -%}
                          <span class="price price--end">
                            {{ item.original_line_price | money }}
                          </span>
                        {%- endif -%}

                        {%- if item.variant.available and item.unit_price_measurement -%}
                          <div class="unit-price caption">
                            <span class="sr-only">{{ 'products.product.price.unit_price' | t }}</span>
                            {{ item.variant.unit_price | money }}
                            <span aria-hidden="true">/</span>
                            <span class="sr-only">&nbsp;{{ 'accessibility.unit_price_separator' | t }}&nbsp;</span>
                            {%- if item.variant.unit_price_measurement.reference_value != 1 -%}
                              {{- item.variant.unit_price_measurement.reference_value -}}
                            {%- endif -%}
                            {{ item.variant.unit_price_measurement.reference_unit }}
                          </div>
                        {%- endif -%}
                      </div>
                    </td>
                  </tr>
                {%- endfor -%}
              </tbody>
            </table>
          {%- endif -%}
        </div>
      </div>

      <p class="sr-only" id="cart-live-region-text" aria-live="polite" role="status"></p>
      <p class="sr-only" id="shopping-cart-line-item-status" aria-live="polite" aria-hidden="true" role="status">
        {{ 'accessibility.loading' | t }}
      </p>
    </form>
    <div class="cart__footer flex items-end flex-col">
      {%- if settings.show_cart_note -%}
        <cart-note class="cart__note field">
          <label for="Cart-note">{{ 'sections.cart.note' | t }}</label>
          <textarea
            class="text-area field__input"
            name="note"
            form="cart"
            id="Cart-note"
            placeholder="{{ 'sections.cart.note' | t }}"
          >{{ cart.note }}</textarea>
        </cart-note>
      {%- endif -%}

      <div class="max-w-sm w-full">
        <div
          x-data="
            {
              btn: document.querySelector('#checkout'),
              type: 'boleta',
              rutMessage: '',
              validRut: false,
              handleRut(e){
                this.rutMessage = ''
                if(validateRut(e.target.value) && e.target.value.length > 8){
                  this.rutMessage = ''
                  this.validRut = true
                  //console.log('llego acá')
                  //console.log(e.target)
                  e.target.value = formatRut(e.target.value, {dots:false})
                }else{
                  this.rutMessage = 'El rut no es válido, intenta nuevamente'
                  this.validRut = false
                }
              },
              validRazon:false,
              messageRazon: '',
              validGiro:false,
              messageGiro: '',
              handleRazon(e){
                this.messageRazon = ''
                if(e.target.value.length){
                  this.messageRazon = ''
                  this.validRazon = true
                }else {
                  this.messageRazon = 'Debes ingresar la razón social',
                  this.validRazon = false
                }
              },
              handleGiro(e){
                this.messageGiro = ''
                if(e.target.value.length){
                  this.messageGiro = ''
                  this.validGiro = true
                }else {
                  this.messageGiro = 'Debes ingresar el giro'
                  this.validGiro = false
                }
              },
              init(){
                this.$watch('type', value => {
                  if(value === 'factura'){
                    this.btn.setAttribute('disabled', 'disabled')
                  }else{
                    this.btn.removeAttribute('disabled')
                  }
                })
                this.$watch('validRut', value => {
                  if(this.validRut && this.validGiro && this.validRazon){
                    this.btn.removeAttribute('disabled')
                  }else{
                    this.btn.setAttribute('disabled', 'disabled')
                  }
                })
                this.$watch('validRazon', value => {
                  if(this.validRut && this.validGiro && this.validRazon){
                    this.btn.removeAttribute('disabled')
                  }else{
                    this.btn.setAttribute('disabled', 'disabled')
                  }
                })

                this.$watch('validGiro', value => {
                  if(this.validRut && this.validGiro && this.validRazon){
                    this.btn.removeAttribute('disabled')
                  }else{
                    this.btn.setAttribute('disabled', 'disabled')
                  }
                })
              }
            }
          "
        >
          <h3 class="mb-6 flex justify-between items-center font-gobold leading-[1.2] uppercase">Tipo de documento</h3>
          <div class="">
            <div class="flex gap-x-4 items-center mb-6">
              <label for="Boleta" class="text-sm">
                <input
                  type="radio"
                  id="Boleta"
                  value="boleta"
                  name="attributes[shoppingcart-tags]"
                  @change="()=>type='boleta'"
                  form="cart"
                  checked
                >
                Boleta
              </label>
              <label for="Factura" class="text-sm">
                <input
                  type="radio"
                  id="Factura"
                  value="factura"
                  name="attributes[shoppingcart-tags]"
                  @change="()=>type='factura'"
                  form="cart"
                >
                Factura
              </label>
            </div>
            <div class="flex flex-col mb-6" x-show="type == 'factura'">
              <h4 class="flex justify-between items-center font-gobold leading-[1.2] uppercase text-[14px] mb-4">
                Ingresa los datos de facturación
              </h4>
              <div class="flex flex-col mb-2">
                <label class="font-bold text-sm mb-1 uppercase" for="rut">RUT</label>
                <input
                  id="rut"
                  type="text"
                  name="attributes[RUT]"
                  placeholder="Ingresa tu RUT, sin puntos y con guión"
                  value="{{ cart.attributes[" RUT"] }}"
                  form="cart"
                  @input="handleRut"
                  class="block w-full p-2 border border-[#4a4a49] focus:outline-[#a00] placeholder:text-sm"
                >
              </div>
              <span
                class="text-[#a00] block text-xs mb-2"
                x-show="!validRut && rutMessage.length"
                x-text="rutMessage"
              ></span>
              <div class="flex flex-col mb-2">
                <label class="font-bold text-sm mb-1 uppercase" for="razon">Razón social</label>
                <input
                  id="razon"
                  type="text"
                  name="attributes[razon]"
                  placeholder="Ingresa tu Razón Social"
                  value="{{ cart.attributes[" razon"] }}"
                  form="cart"
                  @input="handleRazon"
                  class="block w-full p-2 border border-[#4a4a49] focus:outline-[#a00] placeholder:text-sm"
                >
              </div>
              <span
                class="text-[#a00] block text-xs mb-2"
                x-show="!validRazon && messageRazon.length"
                x-text="messageRazon"
              ></span>
              <div class="flex flex-col mb-2">
                <label class="font-bold text-sm mb-1 uppercase" for="giro">Giro</label>
                <input
                  id="giro"
                  type="text"
                  name="attributes[giro]"
                  placeholder="Ingresa tu Giro"
                  value="{{ cart.attributes[" giro"] }}"
                  form="cart"
                  @input="handleGiro"
                  class="block w-full p-2 border border-[#4a4a49] focus:outline-[#a00] placeholder:text-sm"
                >
              </div>
              <span
                class="text-[#a00] block text-xs mb-2"
                x-show="!validGiro && messageGiro.length"
                x-text="messageGiro"
              ></span>
            </div>
          </div>
        </div>
        <div
          x-data="
            {
              form: null,
              btn: null,
              address1: '',
              region: '',
              comuna: '',
              validAddress: false,
              messageAddress: '',
              validRegion: false,
              validComuna: false,

              init() {
                this.form = document.querySelector('#cart');
                this.btn = document.querySelector('#checkout');
                this.updateButtonState();

                this.$watch('address1', value => this.validateAddress(value));
                this.$watch('region', value => this.validateRegion(value));
                this.$watch('comuna', value => this.validateComuna(value));
              },

              updateButtonState() {
                if (this.validAddress && this.validRegion && this.validComuna) {
                  this.btn.removeAttribute('disabled');
                  this.updateFormAction();
                } else {
                  this.btn.setAttribute('disabled', 'disabled');
                }
              },

              validateAddress(value) {
                if (!value.length) {
                  this.validAddress = false;
                  this.messageAddress = 'Debes ingresar una dirección de envío. Intenta nuevamente';
                } else if (/^[a-zA-ZáéíóúÁÉÍÓÚñÑüÜ\s]+\s\d+$/.test(value)) {
                  this.validAddress = true;
                  this.messageAddress = '';
                } else {
                  this.validAddress = false;
                  this.messageAddress = 'Dirección no válida, debe ser calle y número. Intenta nuevamente';
                }
                this.updateButtonState();
              },

              validateRegion(value) {
                this.validRegion = value !== '';
                this.updateButtonState();
              },

              validateComuna(value) {
                this.validComuna = value !== '';
                this.updateButtonState();
              },

              updateFormAction() {
                const paramsArray = [];
                const urlObj = new URL(this.form.action);
                const params = new URLSearchParams(urlObj.search);

                for (const [key, value] of params.entries()) {
                  paramsArray.push({ key, value });
                }

                const items = [
                  { key: 'checkout[shipping_address][country]', value: 'CL' },
                  { key: 'checkout[shipping_address][address1]', value: this.address1 },
                  { key: 'checkout[shipping_address][city]', value: this.comuna },
                  { key: 'checkout[shipping_address][province]', value: this.region }
                ];

                items.forEach(el => {
                  const index = paramsArray.findIndex(param => param.key === el.key);
                  index !== -1 ? paramsArray[index].value = el.value : paramsArray.push(el);
                });

                const paramsObj = new URLSearchParams();
                paramsArray.forEach(el => paramsObj.append(el.key, el.value));

                const actionString = '{{ routes.cart_url }}' + '?' + paramsObj.toString();
                this.form.setAttribute('action', actionString);
              }
            }
          "
        >
          <h4 class="flex justify-between items-center font-gobold leading-[1.2] uppercase text-[14px] mb-4">
            Ingresa tus datos de envío
          </h4>
          <div class="flex flex-col">
            <label class="font-bold text-sm mb-1 uppercase" for="address1">Dirección de envío</label>
            <input
              id="address1"
              type="text"
              placeholder="Ingresa tu dirección de envío (Calle y N°)"
              x-model="address1"
              form="cart"
              class="block w-full p-2 border border-[#4a4a49] focus:outline-[#a00] placeholder:text-sm"
            >
            <span
              class="text-[#a00] block text-xs mb-2"
              x-cloak
              x-show="messageAddress.length && !validAddress"
              x-text="messageAddress"
            ></span>
          </div>
          {% render 'select-region-comuna' %}
        </div>
      </div>

      <div class="mb-4 w-full max-w-sm" {{ block.shopify_attributes }}>
        <div class="flex gap-x-12 items-center justify-between font-gobold">
          <h2 class="uppercase font-semibold">{{ 'sections.cart.subtotal' | t }}:</h2>
          <p class="font-semibold">{{ cart.total_price | money_with_currency }}</p>
        </div>

        <div>
          {%- if cart.cart_level_discount_applications.size > 0 -%}
            <ul class="discounts list-unstyled" role="list" aria-label="{{ 'customer.order.discount' | t }}">
              {%- for discount in cart.cart_level_discount_applications -%}
                <li class="discounts__discount discounts__discount--position">
                  {%- render 'icon-discount' -%}
                  {{ discount.title }}
                  (-{{ discount.total_allocated_amount | money }})
                </li>
              {%- endfor -%}
            </ul>
          {%- endif -%}
        </div>

        {% comment %}
          <small class="tax-note caption-large rte">
            {%- if cart.taxes_included and shop.shipping_policy.body != blank -%}
            {{ 'sections.cart.taxes_included_and_shipping_policy_html' | t: link: shop.shipping_policy.url }}
            {%- elsif cart.taxes_included -%}
            {{ 'sections.cart.taxes_included_but_shipping_at_checkout' | t }}
            {%- elsif shop.shipping_policy.body != blank -%}
            {{ 'sections.cart.taxes_and_shipping_policy_at_checkout_html' | t: link: shop.shipping_policy.url }}
            {%- else -%}
            {{ 'sections.cart.taxes_and_shipping_at_checkout' | t }}
            {%- endif -%}
          </small>
        {% endcomment %}

        <div
          class="cart__ctas"
          {{ block.shopify_attributes }}
          x-data="
            {
              button: null,
              canSubmit: false,
              handleSubmit(){
                // Si el checkbox está marcado, habilita el botón, de lo contrario, lo deshabilita
                this.canSubmit ? this.button.removeAttribute('disabled') : this.button.setAttribute('disabled', 'disabled');
              },
              init(){
                // Asegura que el botón se referencie y se deshabilite en la carga inicial
                this.button = document.querySelector('#checkout');
                this.button.setAttribute('disabled', 'disabled');
              }
            }
          "
          x-init="init()"
        >
          <div class="flex items-start mb-0 mt-4">
            <div class="flex items-center h-5">
              <input
                id="remember"
                type="checkbox"
                x-model="canSubmit"
                @change="handleSubmit"
                class="w-4 h-4 border border-gray-300 rounded bg-gray-50 focus:ring-3 focus:ring-blue-300"
              >
            </div>
            <label for="remember" class="ml-2 text-sm font-medium text-gray-90"
              >Acepto los
              <a href="/policies/terms-of-service" target="_blank" class="text-[#a00] hover:underline"
                >Terminos y condiciones</a
              >.</label
            >
          </div>
        </div>
      </div>

      <div class="flex gap-x-4 items-center mb-12" {{ block.shopify_attributes }}>
        <a
          href="/collections/all"
          class="block bg-[#fff] font-gobold font-bold text-[#a00] border border-[#a00] px-4 py-2 uppercase tracking-[1.5px] transition-opacity duration-200 ease-in-out hover:opacity-70 leading-[1.2]"
        >
          Seguir comprando
        </a>

        <button
          type="submit"
          id="checkout"
          class="block mx-auto bg-[#a00] font-gobold font-bold text-white px-4 py-2 uppercase tracking-[1.5px] transition-colors duration-200 ease-in-out hover:bg-[#efd4d4] hover:text-[#a00]"
          name="checkout"
          {% if cart == empty %}
            disabled
          {% endif %}
          form="cart"
        >
          Pantalla de Pagos
        </button>

        <noscript>
          <button
            type="submit"
            class="block mx-auto bg-[#a00] font-gobold font-bold text-white px-4 py-2 uppercase tracking-[1.5px] mb-8 transition-colors duration-200 ease-in-out hover:bg-[#efd4d4] hover:text-[#a00]"
            form="cart"
          >
            {{ 'sections.cart.update' | t }}
          </button>
        </noscript>
      </div>

      {%- if additional_checkout_buttons -%}
        <div class="cart__dynamic-checkout-buttons additional-checkout-buttons">
          {{ content_for_additional_checkout_buttons }}
        </div>
      {%- endif -%}
  {% endif %}
</div>

<script>
  document.addEventListener('update-cart', (event) => {
    let variantId = event.detail.id;
    let quantity = event.detail.quantity;

    fetch(window.Shopify.routes.root + 'cart/change.js', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ id: variantId, quantity: quantity }),
    })
      .then((response) => response.json())
      .then((data) => {
        location.reload(); // Recarga el carrito para reflejar cambios
      })
      .catch((error) => console.error('Error actualizando carrito:', error));
  });
</script>
